#–®–ê–ì 2: –†–∞–∑–±–æ—Ä –ø–æ —á–∞—Å—Ç—è–º –≤–≤–µ–¥—ë–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

def read_from_db():
	file_object = open("db.txt", "r", encoding="utf8")
	file_content = file_object.read()
	file_object.close()
	return file_content

def parse_tasks(raw_content):
	raw_tasks = raw_content.splitlines()
	tasks = []

	for task_info in raw_tasks:
		splitted_task = task_info.split("<>")
		raw_status = splitted_task[4]
		if raw_status == "active":
			status = "‚úì"
		else:
			status = "‚úï"
		task = status + " " + splitted_task[1] + " " + splitted_task[2] + " " + splitted_task[3]
		tasks.append(task)

	return tasks

def print_all_tasks_to_console(tasks):
	counter = 1
	print("–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏:")
	for task_info in tasks:
		print(str(counter) + ": " + task_info)
		counter += 1


def parse_new_task(raw_data):
	splitted_params = raw_data.split("[") #–ø—Ä–æ–±—É–µ–º –≤—ã–¥–µ–ª–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –¥–∞—Ç—É

	task_description = splitted_params[0].strip() #–º–∞—Å—Å–∏–≤ –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç —Å–∫–æ–±–∫–∏, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–µ–º —Å–º–µ–ª–æ –±—Ä–∞—Ç—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç;
	#üëÜ strip() —É–±–∏—Ä–∞–µ—Ç –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
	task_due_date = "–Ω–µ –∑–∞–¥–∞–Ω–∞"

	if len(splitted_params) == 2: #–µ—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ 2 —ç–ª–µ–º–µ–Ω—Ç–∞
		#–¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç "—É–±–∏—Ä–∞–Ω–∏—è" –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–æ—á–∫–∏
		#task_due_date = splitted_params[1].split("]")
		#task_due_date = task_due_date[0]
		
		task_due_date = splitted_params[1].replace("]","") #"—É–¥–∞–ª—è–µ–º" –ª–∏—à–Ω—é—é –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É, —Ç.–µ. –º–µ–Ω—è–µ–º —Å–∏–º–≤–æ–ª [ –Ω–∞ "–Ω–∏—á–µ–≥–æ"

	print("–°–æ–∑–¥–∞—ë—Ç—Å—è –∑–∞–¥–∞—á–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:")
	print("- –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏: " + task_description)
	print("- –î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: [" + task_due_date + "]")
	print("#----------------------------------#")

def main():
	while True:
		all_tasks = read_from_db()
		tasks_list = parse_tasks(all_tasks)
		print_all_tasks_to_console(tasks_list)

		new_task_info = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É: ")
		parse_new_task(new_task_info)

main()